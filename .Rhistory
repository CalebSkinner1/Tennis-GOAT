filter(remove == "keep") %>%
select(-remove) %>%
arrange(desc(Matchups)) %>%
filter(Matchups > 5) %>%
mutate(
Wins = round(Wins, 0),
Rank = rank(-Matchups, ties.method = "first")) %>%
rename(
`Player 1` = name,
`Player 2` = opp_name) %>%
relocate(Rank, .before = `Player 1`) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = c(2,3), 1.8) %>%
width(j = c(7,8), 1.1) %>%
width(j = 1, .6) %>%
colformat_double(j = c(7,8),
big.mark = "", digits = 0, na_str = "N/A")
#| tbl-cap: Most Matchups in Finals
players %>%
filter(score != "W/O", round == "F") %>%
group_by(name, opp_name) %>%
summarize(
Matchups = n(),
Wins = sum(result == "winner"),
Losses = sum(result == "loser"),
`First Matchup` = year(min(date)),
`Last Matchup` = year(max(date))) %>%
ungroup() %>%
mutate(
Wins = if_else(name > opp_name, Wins + .01, Wins),
remove = if_else(Wins > Losses, "keep", "remove")) %>%
filter(remove == "keep") %>%
select(-remove) %>%
arrange(desc(Matchups)) %>%
filter(Matchups > 3) %>%
mutate(
Wins = round(Wins, 0),
Rank = rank(-Matchups, ties.method = "first")) %>%
rename(
`Player 1` = name,
`Player 2` = opp_name) %>%
relocate(Rank, .before = `Player 1`) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = c(2,3), 1.8) %>%
width(j = c(7,8), 1.1) %>%
width(j = 1, .6) %>%
colformat_double(j = c(7,8),
big.mark = "", digits = 0, na_str = "N/A")
#| tbl-cap: Most Matchups in Finals
players %>%
filter(score != "W/O", round == "F") %>%
group_by(name, opp_name) %>%
summarize(
Matchups = n(),
Wins = sum(result == "winner"),
Losses = sum(result == "loser"),
`First Matchup` = year(min(date)),
`Last Matchup` = year(max(date))) %>%
ungroup() %>%
mutate(
Wins = if_else(name > opp_name, Wins + .01, Wins),
remove = if_else(Wins > Losses, "keep", "remove")) %>%
filter(remove == "keep") %>%
select(-remove) %>%
arrange(desc(Matchups)) %>%
filter(Matchups > 2) %>%
mutate(
Wins = round(Wins, 0),
Rank = rank(-Matchups, ties.method = "first")) %>%
rename(
`Player 1` = name,
`Player 2` = opp_name) %>%
relocate(Rank, .before = `Player 1`) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = c(2,3), 1.8) %>%
width(j = c(7,8), 1.1) %>%
width(j = 1, .6) %>%
colformat_double(j = c(7,8),
big.mark = "", digits = 0, na_str = "N/A")
source("~/.active-rstudio-document", echo=TRUE)
ggplotly(p)
source("~/.active-rstudio-document", echo=TRUE)
?rank()
#| tbl-cap: Most Matchups in Finals
players %>%
filter(score != "W/O", round == "F") %>%
group_by(name, opp_name) %>%
summarize(
Matchups = n(),
Wins = sum(result == "winner"),
Losses = sum(result == "loser"),
`First Matchup` = year(min(date)),
`Last Matchup` = year(max(date))) %>%
ungroup() %>%
mutate(
Wins = if_else(name > opp_name, Wins + .01, Wins),
remove = if_else(Wins > Losses, "keep", "remove")) %>%
filter(remove == "keep") %>%
select(-remove) %>%
arrange(desc(Matchups)) %>%
filter(Matchups > 2) %>%
mutate(
Wins = round(Wins, 0),
Rank = rank(-Matchups, ties.method = "min")) %>%
rename(
`Player 1` = name,
`Player 2` = opp_name) %>%
relocate(Rank, .before = `Player 1`) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = c(2,3), 1.8) %>%
width(j = c(7,8), 1.1) %>%
width(j = 1, .6) %>%
colformat_double(j = c(7,8),
big.mark = "", digits = 0, na_str = "N/A")
knitr::opts_chunk$set(
comment = "#", fig.height = 3,
cache = FALSE, collapse = TRUE,
error = TRUE, echo = FALSE,
message = FALSE,
warning = FALSE)
#| tbl-cap: All Time Country Rankings
players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
`Australian Open` = sum(if_else(tourney_name == "Australian Open" & points > 0, points + bonus, 0)),
`French Open` = sum(if_else(tourney_name == "Roland Garros" & points > 0, points + bonus, 0)),
`Wimbledon` = sum(if_else(tourney_name == "Wimbledon" & points > 0, points + bonus, 0)),
`US Open` = sum(if_else(tourney_name == "US Open" & points > 0, points + bonus, 0)),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
rename(
Country = ioc) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number()) %>%
relocate(Rank, .before = Country) %>%
slice(1:25) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 1, width = .6) %>%
width(j = c(3:9,11), width = 1.2) %>%
colformat_double(j = c(5,7,8,9), digits = 0) %>%
width(j = 2, width = 1.8)
#| fig-cap: Countries over Time
country_sum <- players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
`Australian Open` = sum(if_else(tourney_name == "Australian Open" & points > 0, points + bonus, 0)),
`French Open` = sum(if_else(tourney_name == "Roland Garros" & points > 0, points + bonus, 0)),
`Wimbledon` = sum(if_else(tourney_name == "Wimbledon" & points > 0, points + bonus, 0)),
`US Open` = sum(if_else(tourney_name == "US Open" & points > 0, points + bonus, 0)),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
rename(
Country = ioc) %>%
arrange(desc(`Total Points`))
top25 <- country_sum %>% ungroup() %>% slice(1:25) %>% select(name) %>% pull()
top25 <- country_sum %>% ungroup() %>% slice(1:25) %>% select(ioc) %>% pull()
#| fig-cap: Countries over Time
country_sum <- players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
`Australian Open` = sum(if_else(tourney_name == "Australian Open" & points > 0, points + bonus, 0)),
`French Open` = sum(if_else(tourney_name == "Roland Garros" & points > 0, points + bonus, 0)),
`Wimbledon` = sum(if_else(tourney_name == "Wimbledon" & points > 0, points + bonus, 0)),
`US Open` = sum(if_else(tourney_name == "US Open" & points > 0, points + bonus, 0)),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
arrange(desc(`Total Points`))
top25 <- country_sum %>% ungroup() %>% slice(1:25) %>% select(ioc) %>% pull()
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
# top players over time
p <- players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(name %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
# top players over time
p <- players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25)
# top players over time
p <- players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25)
players %>%
group_by(ioc, date) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25)
# top players over time
p <- players %>%
group_by(ioc, date) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
# top players over time
p <- players %>%
group_by(ioc, date) %>%
summarize(
`Total Points` = cumsum(if_else(points > 0 , points, 0) + sum(bonus))) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
# top players over time
p <- players %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc, date) %>%
summarize(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
# top players over time
p <- players %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc) %>%
mutate(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
#| tbl-cap: All Time Country Rankings
players %>%
filter(tourney_name == "Australian Open") %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
Titles = sum(result == "winner" & round == "F"),
Finals = sum(round == "F"),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
rename(
Country = ioc) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number()) %>%
relocate(Rank, .before = Country) %>%
slice(1:25) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 1, width = .6) %>%
width(j = c(3:9,11), width = 1.2) %>%
colformat_double(j = c(5,7,8,9), digits = 0) %>%
width(j = 2, width = 2)
#| tbl-cap: All Time Country Rankings
players %>%
filter(tourney_name == "Australian Open") %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
Titles = sum(result == "winner" & round == "F"),
Finals = sum(round == "F"),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
rename(
Country = ioc) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number()) %>%
relocate(Rank, .before = Country) %>%
slice(1:25) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 1, width = .6) %>%
width(j = c(3:9), width = 1.2) %>%
colformat_double(j = c(5,7,8,9), digits = 0) %>%
width(j = 2, width = 2)
#| tbl-cap: All Time Country Rankings
players %>%
filter(tourney_name == "Australian Open") %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
Titles = sum(result == "winner" & round == "F"),
Finals = sum(round == "F"),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
rename(
Country = ioc) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number()) %>%
relocate(Rank, .before = Country) %>%
slice(1:25) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 1, width = .6) %>%
width(j = c(3:5, 9), width = 1.2) %>%
colformat_double(j = c(3:5), digits = 0) %>%
width(j = 2, width = 2)
players %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc) %>%
mutate(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25)
#| fig-cap: Countries over Time
aus_co_sum <- players %>%
filter(tourney_name == "Australian Open")
#| fig-cap: Countries over Time
aus_co_sum <- players %>%
filter(tourney_name == "Australian Open") %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
ungroup() %>%
arrange(desc(`Total Points`))
top25 <- aus_co_sum %>% ungroup() %>% slice(1:25) %>% select(ioc) %>% pull()
# top players over time
p <- players %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc) %>%
mutate(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
# top players over time
p <- players %>%
filter(tourney_name == "Australian Open") %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc) %>%
mutate(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
knitr::opts_chunk$set(
comment = "#", fig.height = 3,
cache = FALSE, collapse = TRUE,
error = TRUE, echo = FALSE,
message = FALSE,
warning = FALSE)
active %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 12, width = 1.3) %>%
width(j = 2, width = 2.5) %>%
width(j = 4, width = 1.9) %>%
width(j = c(1,4,8:11), width = .7) %>%
colformat_double(j = c(3,5:9), digits = 0) %>%
colformat_double(j = 3,
big.mark = "", digits = 0, na_str = "N/A")
active <- players %>%
group_by(name, dob, ioc) %>%
summarize(
`Total Points` = sum(points) + sum(bonus),
`Victory Points` = sum(points),
`Bonus Points` = sum(bonus),
Titles = sum(round == "F" & result == "winner"),
Finals = sum(round == "F"),
last_tournament = max(date),
Victories = sum(points > 0),
Defeats = sum(points < 0),
`Win Percent` = scales::percent(Victories/(Victories + Defeats), accuracy = .01)) %>%
ungroup() %>%
filter(last_tournament > ymd(20230101), name != "Andy Murray") %>%
rename(
Country = ioc,
Player = name) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number(),
`Birth Year` = year(dob)) %>%
relocate(Rank, .before = Player) %>%
relocate(`Birth Year`, .before = Country) %>%
select(-dob, -last_tournament) %>%
slice(1:25)
active <- players %>%
group_by(name, dob, ioc) %>%
summarize(
`Total Points` = sum(points) + sum(bonus),
`Victory Points` = sum(points),
`Bonus Points` = sum(bonus),
Titles = sum(round == "F" & result == "winner"),
Finals = sum(round == "F"),
last_tournament = max(date),
Victories = sum(points > 0),
Defeats = sum(points < 0),
`Win Percent` = scales::percent(Victories/(Victories + Defeats), accuracy = .01)) %>%
ungroup() %>%
filter(last_tournament > ymd(20230101), name != "Andy Murray") %>%
rename(
Country = ioc,
Player = name) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number(),
`Birth Year` = year(dob)) %>%
relocate(Rank, .before = Player) %>%
relocate(`Birth Year`, .before = Country) %>%
select(-dob, -last_tournament) %>%
slice(1:25)
active_25 <- active %>% select(Player) %>% pull()
active %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 12, width = 1.3) %>%
width(j = 2, width = 2.5) %>%
width(j = 4, width = 1.9) %>%
width(j = c(1,4,8:11), width = .7) %>%
colformat_double(j = c(3,5:9), digits = 0) %>%
colformat_double(j = 3,
big.mark = "", digits = 0, na_str = "N/A")
