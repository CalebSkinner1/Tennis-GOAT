Country = ioc) %>%
arrange(desc(`Total Points`))
top25 <- country_sum %>% ungroup() %>% slice(1:25) %>% select(name) %>% pull()
top25 <- country_sum %>% ungroup() %>% slice(1:25) %>% select(ioc) %>% pull()
#| fig-cap: Countries over Time
country_sum <- players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
`Australian Open` = sum(if_else(tourney_name == "Australian Open" & points > 0, points + bonus, 0)),
`French Open` = sum(if_else(tourney_name == "Roland Garros" & points > 0, points + bonus, 0)),
`Wimbledon` = sum(if_else(tourney_name == "Wimbledon" & points > 0, points + bonus, 0)),
`US Open` = sum(if_else(tourney_name == "US Open" & points > 0, points + bonus, 0)),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
arrange(desc(`Total Points`))
top25 <- country_sum %>% ungroup() %>% slice(1:25) %>% select(ioc) %>% pull()
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
# top players over time
p <- players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(name %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
# top players over time
p <- players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25)
# top players over time
p <- players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
players %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25)
players %>%
group_by(ioc, date) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25)
# top players over time
p <- players %>%
group_by(ioc, date) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
# top players over time
p <- players %>%
group_by(ioc, date) %>%
summarize(
`Total Points` = cumsum(if_else(points > 0 , points, 0) + sum(bonus))) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
# top players over time
p <- players %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc, date) %>%
summarize(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
# top players over time
p <- players %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc) %>%
mutate(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
#| tbl-cap: All Time Country Rankings
players %>%
filter(tourney_name == "Australian Open") %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
Titles = sum(result == "winner" & round == "F"),
Finals = sum(round == "F"),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
rename(
Country = ioc) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number()) %>%
relocate(Rank, .before = Country) %>%
slice(1:25) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 1, width = .6) %>%
width(j = c(3:9,11), width = 1.2) %>%
colformat_double(j = c(5,7,8,9), digits = 0) %>%
width(j = 2, width = 2)
#| tbl-cap: All Time Country Rankings
players %>%
filter(tourney_name == "Australian Open") %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
Titles = sum(result == "winner" & round == "F"),
Finals = sum(round == "F"),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
rename(
Country = ioc) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number()) %>%
relocate(Rank, .before = Country) %>%
slice(1:25) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 1, width = .6) %>%
width(j = c(3:9), width = 1.2) %>%
colformat_double(j = c(5,7,8,9), digits = 0) %>%
width(j = 2, width = 2)
#| tbl-cap: All Time Country Rankings
players %>%
filter(tourney_name == "Australian Open") %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus),
`Victory Points` = sum(if_else(points > 0 , points, 0)),
`Bonus Points` = sum(bonus),
Titles = sum(result == "winner" & round == "F"),
Finals = sum(round == "F"),
Victories = sum(points > 0),
`Win Percent` = scales::percent(sum(points > 0)/(sum(points > 0) + sum(points < 0)), accuracy = .01)) %>%
ungroup() %>%
rename(
Country = ioc) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number()) %>%
relocate(Rank, .before = Country) %>%
slice(1:25) %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 1, width = .6) %>%
width(j = c(3:5, 9), width = 1.2) %>%
colformat_double(j = c(3:5), digits = 0) %>%
width(j = 2, width = 2)
players %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc) %>%
mutate(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25)
#| fig-cap: Countries over Time
aus_co_sum <- players %>%
filter(tourney_name == "Australian Open")
#| fig-cap: Countries over Time
aus_co_sum <- players %>%
filter(tourney_name == "Australian Open") %>%
group_by(ioc) %>%
summarize(
`Total Points` = sum(if_else(points > 0 , points, 0)) + sum(bonus)) %>%
ungroup() %>%
arrange(desc(`Total Points`))
top25 <- aus_co_sum %>% ungroup() %>% slice(1:25) %>% select(ioc) %>% pull()
# top players over time
p <- players %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc) %>%
mutate(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
# top players over time
p <- players %>%
filter(tourney_name == "Australian Open") %>%
mutate(points_revision = if_else(points > 0, points, 0)) %>%
group_by(ioc) %>%
mutate(
`Total Points` = cumsum(points_revision + bonus)) %>%
filter(ioc %in% top25) %>%
rename(
Country = ioc,
Date = date) %>%
ungroup() %>%
ggplot(aes(x = Date, y = `Total Points`, color = Country)) +
geom_line() +
scale_x_date(expand = c(0, 1000)) +
theme(legend.position = "none")
ggplotly(p)
knitr::opts_chunk$set(
comment = "#", fig.height = 3,
cache = FALSE, collapse = TRUE,
error = TRUE, echo = FALSE,
message = FALSE,
warning = FALSE)
active %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 12, width = 1.3) %>%
width(j = 2, width = 2.5) %>%
width(j = 4, width = 1.9) %>%
width(j = c(1,4,8:11), width = .7) %>%
colformat_double(j = c(3,5:9), digits = 0) %>%
colformat_double(j = 3,
big.mark = "", digits = 0, na_str = "N/A")
active <- players %>%
group_by(name, dob, ioc) %>%
summarize(
`Total Points` = sum(points) + sum(bonus),
`Victory Points` = sum(points),
`Bonus Points` = sum(bonus),
Titles = sum(round == "F" & result == "winner"),
Finals = sum(round == "F"),
last_tournament = max(date),
Victories = sum(points > 0),
Defeats = sum(points < 0),
`Win Percent` = scales::percent(Victories/(Victories + Defeats), accuracy = .01)) %>%
ungroup() %>%
filter(last_tournament > ymd(20230101), name != "Andy Murray") %>%
rename(
Country = ioc,
Player = name) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number(),
`Birth Year` = year(dob)) %>%
relocate(Rank, .before = Player) %>%
relocate(`Birth Year`, .before = Country) %>%
select(-dob, -last_tournament) %>%
slice(1:25)
active <- players %>%
group_by(name, dob, ioc) %>%
summarize(
`Total Points` = sum(points) + sum(bonus),
`Victory Points` = sum(points),
`Bonus Points` = sum(bonus),
Titles = sum(round == "F" & result == "winner"),
Finals = sum(round == "F"),
last_tournament = max(date),
Victories = sum(points > 0),
Defeats = sum(points < 0),
`Win Percent` = scales::percent(Victories/(Victories + Defeats), accuracy = .01)) %>%
ungroup() %>%
filter(last_tournament > ymd(20230101), name != "Andy Murray") %>%
rename(
Country = ioc,
Player = name) %>%
arrange(desc(`Total Points`)) %>%
mutate(
Rank = row_number(),
`Birth Year` = year(dob)) %>%
relocate(Rank, .before = Player) %>%
relocate(`Birth Year`, .before = Country) %>%
select(-dob, -last_tournament) %>%
slice(1:25)
active_25 <- active %>% select(Player) %>% pull()
active %>%
flextable() %>%
align(align = "center", part = "all") %>%
width(j = 12, width = 1.3) %>%
width(j = 2, width = 2.5) %>%
width(j = 4, width = 1.9) %>%
width(j = c(1,4,8:11), width = .7) %>%
colformat_double(j = c(3,5:9), digits = 0) %>%
colformat_double(j = 3,
big.mark = "", digits = 0, na_str = "N/A")
library("tidyverse")
library("janitor")
library("here")
library("countrycode")
library("tidymodels")
path_to_file <- here("data")
path_to_file <- here("data/wta")
files_matches <- fs::dir_ls(path = path_to_file, glob = "*wta_matches_*csv")
pre_matches <- read_csv(files_matches, id = "path") %>% select(contains("tourney"), contains("seed"), contains("id"), winner_name, loser_name,
winner_rank, loser_rank, round, score) %>%
filter(tourney_level == "G") %>%
mutate(date = ymd(tourney_date)) %>%
select(-tourney_date, -tourney_level) %>%
filter(date > ymd(19680301)) %>%
relocate(date, .after = tourney_name) %>%
relocate(tourney_id, .after = score)
pre_matches <- read_csv(files_matches, id = "path") %>% select(contains("tourney"), contains("seed"), contains("id"), winner_name, loser_name,
winner_rank, loser_rank, round, score) %>%
filter(tourney_level == "G") %>%
mutate(date = ymd(tourney_date)) %>%
select(-tourney_date, -tourney_level) %>%
filter(date > ymd(19680301)) %>%
relocate(date, .after = tourney_name) %>%
relocate(tourney_id, .after = score)
path_to_file <- here("data/wta")
files_matches <- fs::dir_ls(path = path_to_file, glob = "*wta_matches_*csv")
path_to_file <- here("data/wta")
files_matches <- fs::dir_ls(path = path_to_file, glob = "*wta_matches_*csv")
pre_matches <- read_csv(files_matches, id = "path") %>% select(contains("tourney"), contains("seed"), contains("id"), winner_name, loser_name,
winner_rank, loser_rank, round, score) %>%
filter(tourney_level == "G") %>%
mutate(date = ymd(tourney_date)) %>%
select(-tourney_date, -tourney_level) %>%
filter(date > ymd(19680301)) %>%
relocate(date, .after = tourney_name) %>%
relocate(tourney_id, .after = score)
players_info <- read_csv(here("data/wta/wta_players.csv")) %>%
mutate(player = str_c(name_first, " ", name_last)) %>%
select(-contains("name"), -wikidata_id)
files_rankings <- fs::dir_ls(path = path_to_file, glob = "*wta_rankings_*csv")
rankings <- read_csv(files_rankings, id = "path") %>%
rename(player_id = player) %>%
mutate(date = ymd(ranking_date)) %>%
select(-path, -points, -ranking_date) %>%
left_join(players_info, by = join_by(player_id)) %>%
select(rank, date, player, player_id)
players_info <- read_csv(here("data/wta/wta_players.csv")) %>%
mutate(player = str_c(name_first, " ", name_last)) %>%
select(-contains("name"), -wikidata_id)
players_info <- read_csv(here("data/wta/wta_players.csv")) %>%
mutate(player = str_c(name_first, " ", name_last)) %>%
select(-contains("name"), -wikidata_id)
files_rankings <- fs::dir_ls(path = path_to_file, glob = "*wta_ranking_*csv")
rankings <- read_csv(files_rankings, id = "path") %>%
rename(player_id = player) %>%
mutate(date = ymd(ranking_date)) %>%
select(-path, -points, -ranking_date) %>%
left_join(players_info, by = join_by(player_id)) %>%
select(rank, date, player, player_id)
files_rankings <- fs::dir_ls(path = path_to_file, glob = "*wta_rankings_*csv")
rankings <- read_csv(files_rankings, id = "path") %>%
rename(player_id = player) %>%
mutate(date = ymd(ranking_date)) %>%
select(-path, -points, -ranking_date) %>%
left_join(players_info, by = join_by(player_id)) %>%
select(rank, date, player, player_id)
pre_missing <- pre_matches %>%
filter(is.na(winner_rank)) %>%
bind_rows(pre_matches %>% filter(is.na(loser_rank))) %>%
distinct()
w_path_to_file <- here("data/wta")
source("~/Desktop/Rock Chucks/Miscellaneous/Truly Miscellaneous/Sports/Tennis/Tennis GOAT/data-wta.R")
w_rankings <- read_csv(w_files_rankings, id = "path") %>%
rename(player_id = player) %>%
mutate(date = ymd(ranking_date)) %>%
select(-path, -points, -ranking_date) %>%
left_join(w_players_info, by = join_by(player_id)) %>%
select(rank, date, player, player_id)
w_pre_missing <- w_pre_matches %>%
filter(is.na(winner_rank)) %>%
bind_rows(pre_matches %>% filter(is.na(loser_rank))) %>%
distinct()
w_pre_missing <- w_pre_matches %>%
filter(is.na(winner_rank)) %>%
bind_rows(w_pre_matches %>% filter(is.na(loser_rank))) %>%
distinct()
w_pre_missing
w_pre_matches %>%
left_join(w_rankings %>% select(-date), by = join_by(winner_name == player, tourney_id), relationship = "many-to-many")
w_pre_missing
w_pre_missing %>% glimpse()
w_pre_missing %>% select(tourney_id) %>% distinct()
w_pre_missing %>% select(tourney_id) %>% distinct() %>% view()
w_pre_matches
w_pre_matches %>% select(tourney_id)
w_pre_matches %>% select(tourney_id) %>% distinct()
w_pre_matches %>% select(tourney_id) %>% distinct() %>% arrange(desc(tourney_id))
w_pre_matches %>% select(tourney_id) %>% distinct()
w_pre_matches %>% select(tourney_id) %>% distinct() %>% arrange(desc(tourney_id))
w_pre_matches %>% select(tourney_id) %>% distinct() %>% arrange(desc(tourney_id))
w_pre_matches %>% select(tourney_id) %>% distinct()
w_pre_matches <- read_csv(w_files_matches, id = "path") %>% select(contains("tourney"), contains("seed"), contains("id"), winner_name, loser_name,
winner_rank, loser_rank, round, score) %>%
filter(tourney_level == "G") %>%
mutate(date = ymd(tourney_date)) %>%
select(-tourney_date, -tourney_level) %>%
filter(date > ymd(19680301)) %>%
relocate(date, .after = tourney_name) %>%
relocate(tourney_id, .after = score) %>%
mutate(
tourney_id = case_when(
str_detect(tourney_id, "FRA") ~ str_c(str_extract(tourney_id, [0-9]{4}), "-520"),
w_pre_matches <- read_csv(w_files_matches, id = "path") %>% select(contains("tourney"), contains("seed"), contains("id"), winner_name, loser_name,
winner_rank, loser_rank, round, score) %>%
filter(tourney_level == "G") %>%
mutate(date = ymd(tourney_date)) %>%
select(-tourney_date, -tourney_level) %>%
filter(date > ymd(19680301)) %>%
relocate(date, .after = tourney_name) %>%
relocate(tourney_id, .after = score) %>%
mutate(
tourney_id = case_when(
str_detect(tourney_id, "FRA") ~ str_c(str_extract(tourney_id, "[0-9]{4}"), "-520"),
str_detect(tourney_id, "GBR") ~ str_c(str_extract(tourney_id, "[0-9]{4}"), "-540"),
str_detect(tourney_id, "AUS") ~ str_c(str_extract(tourney_id, "[0-9]{4}"), "-580"),
str_detect(tourney_id, "USA") ~ str_c(str_extract(tourney_id, "[0-9]{4}"), "-560"),
.default = tourney_id))
w_pre_matches
w_pre_matches %>% select(tourney_id)
w_pre_matches %>% select(tourney_id) %>% distinct()
w_pre_matches %>% select(tourney_id) %>% distinct() %>% view()
w_pre_matches <- read_csv(w_files_matches, id = "path") %>% select(contains("tourney"), contains("seed"), contains("id"), winner_name, loser_name,
winner_rank, loser_rank, round, score)
w_pre_matches <- read_csv(w_files_matches, id = "path") %>% select(contains("tourney"), contains("seed"), contains("id"), winner_name, loser_name,
winner_rank, loser_rank, round, score) %>%
filter(tourney_level == "G") %>%
mutate(date = ymd(tourney_date)) %>%
select(-tourney_date, -tourney_level) %>%
filter(date > ymd(19680301)) %>%
relocate(date, .after = tourney_name) %>%
relocate(tourney_id, .after = score)
w_pre_matches
w_pre_matches %>% filter(date > ymd(19770101))
w_pre_matches %>% filter(date > ymd(19770801))
w_pre_matches <- read_csv(w_files_matches, id = "path") %>% select(contains("tourney"), contains("seed"), contains("id"), winner_name, loser_name,
winner_rank, loser_rank, round, score) %>%
filter(tourney_level == "G") %>%
mutate(date = ymd(tourney_date)) %>%
select(-tourney_date, -tourney_level) %>%
filter(date > ymd(19680301)) %>%
relocate(date, .after = tourney_name) %>%
relocate(tourney_id, .after = score) %>%
mutate(
tourney_id = case_when(
str_detect(tourney_id, "FRA") ~ str_c(str_extract(tourney_id, "[0-9]{4}"), "-520"),
str_detect(tourney_id, "GBR") ~ str_c(str_extract(tourney_id, "[0-9]{4}"), "-540"),
str_detect(tourney_id, "AUS") & date == ymd(19770103) ~ "1977-580",
str_detect(tourney_id, "AUS") & date == ymd(19771219) ~ "1977-581",
str_detect(tourney_id, "AUS") ~ str_c(str_extract(tourney_id, "[0-9]{4}"), "-580"),
str_detect(tourney_id, "USA") ~ str_c(str_extract(tourney_id, "[0-9]{4}"), "-560"),
.default = tourney_id))
870/6
/3
145/3
145/5
20*36
